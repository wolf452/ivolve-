pipeline {
    agent any
    environment {
        DOCKER_IMAGE = 'docker.io/ahmedmaher07/ivolve'
        KUBE_NAMESPACE = 'default'
        DEPLOYMENT_YAML = 'deployment.yaml'
        KUBECONFIG = '/home/ahmed/.kube/config' 
    }
    stages {
        // Checkout code from GitHub repositories
        stage('Checkout') {
            steps {
                script {
                    git url: 'https://github.com/IbrahimAdell/Lab.git', branch: 'main'
                    dir('jenkins/lab1') {
                        git url: 'https://github.com/wolf8534/ivolve-.git', branch: 'main'
                    }
                }
            }
        }

        // Build Docker image from Dockerfile
        stage('Build Docker Image') {
            steps {
                script {
                    // تأكد من أنك في المسار الصحيح للـ Dockerfile
                    // sh 'docker build -t $DOCKER_IMAGE .'  
                }
            }
        }

        // Push Docker image to Docker Hub
        stage('Push Docker Image') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'Docker_hub', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        // sh 'docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}'  
                        // Uncomment the following line to push the image
                        // sh 'docker push ${DOCKER_IMAGE}'  
                    }
                }
            }
        }

        // Edit Deployment.yaml
        stage('Edit Deployment.yaml') {
            steps {
                script {
                    // استخدام sed لتحديث اسم الصورة في ملف deployment.yaml
                    // sh "sed -i 's|image:.*|image: $DOCKER_IMAGE|g' $DEPLOYMENT_YAML"
                }
            }
        }

        // Deploy to Kubernetes
        stage('Deploy to Kubernetes') {
            steps {
                script {
                    // Use KUBECONFIG credentials
                    withCredentials([file(credentialsId: 'k8s_token', variable: 'KUBECONFIG')]) {
                        // Make sure KUBECONFIG points to the correct kubeconfig file
                        sh 'export KUBECONFIG=$KUBECONFIG'
                        // Apply the deployment
                        sh "kubectl apply -f $DEPLOYMENT_YAML -n $KUBE_NAMESPACE"
                    }
                }
            }
        }

        // Post action (e.g., notifications, additional tasks)
        stage('Post Action') {
            steps {
                script {
                    echo "Deployment to Kubernetes completed successfully!"
                }
            }
        }
    }

    post {
        success {
            echo "Pipeline executed successfully."
        }
        failure {
            echo "Pipeline failed."
        }
    }
}
