pipeline {
    agent any
    environment {
        DOCKER_IMAGE = 'docker.io/ahmedmaher07/ivolve'
        KUBE_NAMESPACE = 'default'  // You can customize the Kubernetes Namespace
        DEPLOYMENT_YAML = 'deployment.yaml'
    }
    stages {
        // Checkout code from GitHub repositories
        stage('Checkout') {
            steps {
                git url: 'https://github.com/IbrahimAdell/Lab.git', branch: 'main'
                dir('jenkins/lab1') {
                    git url: 'https://github.com/wolf8534/ivolve-.git', branch: 'main'
                }
            }
        }
        
        // Build Docker image from Dockerfile
        stage('Build Docker Image') {
            steps {
                script {
                     sh   'docker build -t docker.io/ahmedmaher07/ivolve .'
                }
            }
        }
        
        // Push Docker image to Docker Hub
        stage('Push Docker Image') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'Docker_hub', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh 'docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}'
                        sh 'docker push ${DOCKER_IMAGE}'
                    }
                }
            }
        }

        // Login to Kubernetes Cluster
        stage('Login to Kubernetes') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'k8s_token', variable: 'K8S_TOKEN')]) {
                        sh 'echo "${K8S_TOKEN}" | kubectl login --token=${K8S_TOKEN} --server=https://127.0.0.1:45907'
                        sh 'kubectl config use-context kind-kind'
                    }
                }
            }
        }

        // Deploy to Kubernetes
        stage('Deploy to Kubernetes') {
            steps {
                script {
                    sh "kubectl apply -f ${DEPLOYMENT_YAML} -n ${KUBE_NAMESPACE}"
                }
            }
        }

        // Post action (e.g., notifications, additional tasks)
        stage('Post Action') {
            steps {
                script {
                    echo "Deployment to Kubernetes completed successfully!"
                }
            }
        }
    }

    post {
        success {
            echo "Pipeline executed successfully."
        }
        failure {
            echo "Pipeline failed."
        }
    }
}
