pipeline {
    agent any
    environment {
        DOCKER_IMAGE = 'docker.io/ahmedmaher07/ivolve'
        KUBE_NAMESPACE = 'default'  // يمكنك تخصيصه حسب الـ Namespace في الـ Kubernetes
        DEPLOYMENT_YAML = 'deployment.yaml'
    }
    stages {
        stage('Checkout') {
            steps {
                script {
                    // استنساخ المستودعات مع تفعيل sparse-checkout
                    sh '''
                    git clone --branch main https://github.com/IbrahimAdell/Lab.git
                    git clone --branch main https://github.com/wolf8534/ivolve-.git
                    cd jenkins
                    git sparse-checkout init --cone
                    git sparse-checkout set jenkins/Lab1
                    '''
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    // بناء صورة Docker من Dockerfile
                    sh 'docker build -t $DOCKER_IMAGE .'
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                script {
                    // دفع صورة Docker إلى Docker Hub
                    withCredentials([usernamePassword(credentialsId: 'Docker_hub', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh 'docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD'
                        sh 'docker push $DOCKER_IMAGE'
                    }
                }
            }
        }
        stage('Edit Deployment.yaml') {
            steps {
                script {
                    // تعديل الـ deployment.yaml باستخدام sed
                    sh "sed -i 's|image:.*|image: $DOCKER_IMAGE|g' $DEPLOYMENT_YAML"
                }
            }
        }
        stage('Deploy to Kubernetes') {
            steps {
                script {
                    // تطبيق التغييرات على Kubernetes
                    withCredentials([usernamePassword(credentialsId: 'k8s_login', usernameVariable: 'kind_USERNAME', passwordVariable: 'kind_PASSWORD')]) {
                        sh "kubectl apply -f $DEPLOYMENT_YAML -n $KUBE_NAMESPACE"
                    }
                }
            }
        }
        stage('Post Action') {
            steps {
                script {
                    // إجراء بعض الأنشطة بعد التنفيذ
                    echo "Deployment to Kubernetes completed successfully!"
                }
            }
        }
    }
    post {
        success {
            echo "Pipeline executed successfully."
        }
        failure {
            echo "Pipeline failed."
        }
    }
}
